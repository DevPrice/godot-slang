<?xml version="1.0" encoding="UTF-8" ?>
<class name="ComputeTexture" inherits="Texture2D" experimental="The implementation may change or be removed." xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/godotengine/godot/master/doc/class.xsd">
	<brief_description>
		Texture backed by a compute shader.
	</brief_description>
	<description>
		A [Texture2D] resource backed by a [ComputeShaderTask].
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_data_format" qualifiers="const">
			<return type="int" enum="RenderingDevice.DataFormat" />
			<description>
				Get the data format used by the underlying render texture.
			</description>
		</method>
		<method name="get_task" qualifiers="const">
			<return type="ComputeShaderTask" />
			<description>
				Get the underlying task associated with this texture.
			</description>
		</method>
		<method name="reload_shader">
			<return type="void" />
			<description>
				Reload the shader used by this texture and reset any internal state.
			</description>
		</method>
		<method name="render">
			<return type="void" />
			<description>
				Dispatch the compute shader and render to the backing texture.
			</description>
		</method>
		<method name="set_data_format">
			<return type="void" />
			<param index="0" name="p_data_format" type="int" enum="RenderingDevice.DataFormat" />
			<description>
				Set the data format used by the underlying render texture.
			</description>
		</method>
	</methods>
	<members>
		<member name="compute_shader" type="ComputeShaderFile" setter="set_compute_shader" getter="get_compute_shader">
			The compute shader associated with this texture.
		</member>
		<member name="is_animated" type="bool" setter="set_is_animated" getter="get_is_animated" default="false">
			If [code]true[/code], the texture will be rerendered each frame.
		</member>
		<member name="resource_local_to_scene" type="bool" setter="set_local_to_scene" getter="is_local_to_scene" overrides="Resource" default="false" />
		<member name="size" type="Vector2i" setter="set_size" getter="get_size" default="Vector2i(256, 256)">
			The size of the backing texture.
		</member>
	</members>
</class>
